# Create-Folders.ps1
# PowerShell script to create Canon Story folder structure

Write-Host "Creating Canon Story folder structure..." -ForegroundColor Green

# Define all folders to create
$folders = @(
    # Public routes
    "src/app/(public)",
    "src/app/(public)/novels",
    "src/app/(public)/novels/[novelId]",
    "src/app/(public)/novels/[novelId]/chapters",
    "src/app/(public)/novels/[novelId]/chapters/[chapterId]",
    "src/app/(public)/novels/[novelId]/reviews",
    "src/app/(public)/search",
    "src/app/(public)/genres",
    "src/app/(public)/genres/[genre]",
    "src/app/(public)/trending",
    "src/app/(public)/subscription",
    "src/app/(public)/subscription/plans",
    "src/app/(public)/subscription/success",
    "src/app/(public)/subscription/cancel",
    "src/app/(public)/profile",
    "src/app/(public)/profile/[userId]",
    "src/app/(public)/profile/[userId]/achievements",
    "src/app/(public)/profile/[userId]/reading-lists",
    "src/app/(public)/profile/[userId]/statistics",
    "src/app/(public)/profile/settings",
    "src/app/(public)/profile/settings/customization",
    "src/app/(public)/profile/settings/preferences",
    "src/app/(public)/leaderboards",
    "src/app/(public)/leaderboards/reading",
    "src/app/(public)/leaderboards/social",
    "src/app/(public)/leaderboards/achievements",
    "src/app/(public)/community",
    "src/app/(public)/community/forums",
    "src/app/(public)/community/events",

    # Admin routes
    "src/app/(admin)",
    "src/app/(admin)/admin",
    "src/app/(admin)/admin/novels",
    "src/app/(admin)/admin/novels/create",
    "src/app/(admin)/admin/novels/[id]",
    "src/app/(admin)/admin/novels/[id]/schedule",
    "src/app/(admin)/admin/novels/[id]/analytics",
    "src/app/(admin)/admin/novels/[id]/chapters",
    "src/app/(admin)/admin/novels/[id]/chapters/create",
    "src/app/(admin)/admin/users",
    "src/app/(admin)/admin/users/[userId]",
    "src/app/(admin)/admin/users/moderation",
    "src/app/(admin)/admin/users/roles",
    "src/app/(admin)/admin/gamification",
    "src/app/(admin)/admin/gamification/achievements",
    "src/app/(admin)/admin/gamification/achievements/create",
    "src/app/(admin)/admin/gamification/customization",
    "src/app/(admin)/admin/gamification/customization/colors",
    "src/app/(admin)/admin/gamification/customization/borders",
    "src/app/(admin)/admin/gamification/customization/effects",
    "src/app/(admin)/admin/gamification/leaderboards",
    "src/app/(admin)/admin/gamification/events",
    "src/app/(admin)/admin/subscriptions",
    "src/app/(admin)/admin/subscriptions/plans",
    "src/app/(admin)/admin/subscriptions/revenue",
    "src/app/(admin)/admin/subscriptions/billing",
    "src/app/(admin)/admin/content",
    "src/app/(admin)/admin/content/moderation",
    "src/app/(admin)/admin/content/genres",
    "src/app/(admin)/admin/content/tags",
    "src/app/(admin)/admin/content/import",
    "src/app/(admin)/admin/content/media",
    "src/app/(admin)/admin/analytics",
    "src/app/(admin)/admin/analytics/engagement",
    "src/app/(admin)/admin/analytics/revenue",
    "src/app/(admin)/admin/analytics/performance",
    "src/app/(admin)/admin/settings",
    "src/app/(admin)/admin/settings/themes",
    "src/app/(admin)/admin/settings/notifications",
    "src/app/(admin)/admin/settings/integrations",

    # API routes
    "src/app/api",
    "src/app/api/public",
    "src/app/api/public/novels",
    "src/app/api/public/novels/[id]",
    "src/app/api/public/novels/[id]/chapters",
    "src/app/api/public/novels/[id]/reviews",
    "src/app/api/public/novels/[id]/pdf",
    "src/app/api/public/novels/trending",
    "src/app/api/public/novels/search",
    "src/app/api/public/chapters",
    "src/app/api/public/chapters/[id]",
    "src/app/api/public/chapters/[id]/views",
    "src/app/api/public/chapters/[id]/comments",
    "src/app/api/public/users",
    "src/app/api/public/users/profile",
    "src/app/api/public/users/progress",
    "src/app/api/public/users/bookmarks",
    "src/app/api/public/users/achievements",
    "src/app/api/public/users/customization",
    "src/app/api/public/users/[userId]",
    "src/app/api/public/gamification",
    "src/app/api/public/gamification/achievements",
    "src/app/api/public/gamification/leaderboards",
    "src/app/api/public/gamification/progress",
    "src/app/api/public/subscription",
    "src/app/api/public/subscription/status",
    "src/app/api/public/subscription/plans",
    "src/app/api/public/subscription/create",
    "src/app/api/public/subscription/cancel",
    "src/app/api/public/genres",
    "src/app/api/admin",
    "src/app/api/admin/novels",
    "src/app/api/admin/novels/[id]",
    "src/app/api/admin/novels/[id]/chapters",
    "src/app/api/admin/novels/[id]/schedule",
    "src/app/api/admin/novels/[id]/analytics",
    "src/app/api/admin/users",
    "src/app/api/admin/users/[userId]",
    "src/app/api/admin/users/[userId]/ban",
    "src/app/api/admin/users/[userId]/progress",
    "src/app/api/admin/users/moderation",
    "src/app/api/admin/gamification",
    "src/app/api/admin/gamification/achievements",
    "src/app/api/admin/gamification/achievements/[id]",
    "src/app/api/admin/gamification/customization",
    "src/app/api/admin/gamification/customization/[id]",
    "src/app/api/admin/gamification/leaderboards",
    "src/app/api/admin/gamification/events",
    "src/app/api/admin/subscriptions",
    "src/app/api/admin/subscriptions/plans",
    "src/app/api/admin/subscriptions/revenue",
    "src/app/api/admin/content",
    "src/app/api/admin/content/genres",
    "src/app/api/admin/content/tags",
    "src/app/api/admin/content/moderation",
    "src/app/api/admin/media",
    "src/app/api/admin/import",
    "src/app/api/admin/analytics",
    "src/app/api/admin/analytics/engagement",
    "src/app/api/admin/analytics/performance",
    "src/app/api/admin/settings",
    "src/app/api/admin/settings/themes",
    "src/app/api/admin/settings/notifications",
    "src/app/api/webhooks",
    "src/app/api/webhooks/clerk",
    "src/app/api/webhooks/stripe",

    # Components structure
    "src/components",
    "src/components/shared",
    "src/components/shared/ui",
    "src/components/shared/layout",
    "src/components/shared/forms",
    "src/components/shared/gamification",
    "src/components/discovery",
    "src/components/social",
    "src/components/gamification",
    "src/components/reader",
    "src/components/admin",
    "src/components/admin/forms",
    "src/components/admin/tables",
    "src/components/admin/media",
    "src/components/admin/gamification",

    # Other directories
    "src/lib",
    "src/services",
    "src/hooks",
    "src/hooks/admin",
    "src/types",
    "src/styles",
    "src/config",
    "prisma/migrations",
    "public/icons",
    "public/images",
    "public/achievements",
    "public/customizations",
    "docs",
    "docs/api",
    "docs/components",
    "docs/deployment",
    "tests",
    "tests/api",
    "tests/components",
    "tests/services",
    "tests/hooks",
    "tests/integration"
)

# Create all folders
foreach ($folder in $folders) {
    New-Item -Path $folder -ItemType Directory -Force | Out-Null
    Write-Host "Created: $folder" -ForegroundColor DarkGray
}

Write-Host "`nFolder structure created successfully!" -ForegroundColor Green

# Create .gitkeep files in empty directories
Write-Host "`nCreating .gitkeep files..." -ForegroundColor Yellow

$directories = Get-ChildItem -Path "src", "public", "docs", "tests" -Recurse -Directory -ErrorAction SilentlyContinue

foreach ($dir in $directories) {
    $files = Get-ChildItem -Path $dir.FullName -File -ErrorAction SilentlyContinue
    if ($files.Count -eq 0) {
        New-Item -Path "$($dir.FullName)/.gitkeep" -ItemType File -Force | Out-Null
    }
}

Write-Host "Setup complete!" -ForegroundColor Green